/*<열기>*******************************************************************

모바일 MOBILE : < 768px ---------------------------------------------
* columns -           4개
* margin-            5px
* gutter -          20px 
* container-size -  100% * -(5px*2)


테블릿 TABLET : >= 768px ---------------------------------------------
* columns -          12개
* margin-            30px
* gutter -          20px
* container-size -  100% * - (30px*2)
* max-container-size - 960px


데스크톱 DESKTOP : >= 960px -------------------------------------------
* columns -          12개
* margin-            auto
* gutter -          20px
* unit-             75px
* container-size -  1140px
* max-container-size - 1140px

*********************************************************************/
@use '../constants/breakpoints' as *;
@use '../mixins/responsive' as *;


$gutter: 20px;

//모바일
$sm-columns:4;
$sm-margin: 5px;

//테블릿릿
// $md-breakpoint: 768px;
$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + calc($md-margin * 2); //container padding EOans

// @debug calc($lg-unit + $gutter) * $lg-columns;


//데스크톱
// $lg-breakpoint: 1200px;
$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: calc($lg-unit + $gutter) * $lg-columns;


.container {
  width: 100%;
  padding:0 $sm-margin;
  margin: 0 auto;

//가로배치 정렬
  .row {
    display: flex;
    flex-wrap: wrap;
  }

  //.col-sm-1, .col-md-2, .col-lg-3   ...
  [class^='col-'] {
    //거터(거터의 절반만큼의 패딩)때문에 항상 패딩이 발생.
    padding: 0 calc($gutter / 2);
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i}{
      // width: percentage($i / $sm-columns);
      width: calc($i / $sm-columns) * 100%; 
    }
  }

    // @media screen and (min-width: $md-breakpoint)
 @include responsive(T) {
    max-width: $md-max-container;
    padding:0 $md-margin;
    
    @for $i from 1 through $md-columns {
      .col-md-#{$i}{
        // width: percentage($i / $md-columns);
        width: calc($i / $md-columns) * 100%;
      }
    }
  }


  // @media screen and (min-width: $lg-breakpoint)
  @include responsive(D) {
    max-width: $lg-max-container;
    padding:0;
    
    @for $i from 1 through $lg-columns {
      .col-lg-#{$i}{
        // width: percentage($i / $md-columns);
        width: calc($lg-unit + $gutter) * $i;
      }
    }
  }

}